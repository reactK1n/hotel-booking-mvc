@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@




@model hotel_booking_model.Dtos.AuthenticationDtos.UpdatePasswordDto
<div class="container">
    <div class="row d-flex justify-content-center align-items-center mt-5">
        <div class="col-sm-12 col-md-8 col-lg-8">
            <div class="card w-100 m-5 bg-white">

                @using (Html.BeginForm("UpdatePassword", "Auth", FormMethod.Post, new { novalidate = "true", @class = "needs-validation" }))
                {
                <div class="bg-white m-5">
                    <div class="form-group mb-2">
                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control has-validation", @placeholder = "Email", @required = "required" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "badge bg-danger" })
                        @if (ViewBag.error != null)
                        {
                            <span class="badge bg-danger">@ViewBag.error</span>
                        }
                    </div>
                    <div class="form-group mb-2">
                        @Html.TextBoxFor(x => x.CurrentPassword, new { @class = "form-control has-validation", @placeholder = "Current Password", @required = "required", @type = "password", @value = "" })
                        @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "badge bg-danger" })
                        @if (ViewBag.error != null)
                        {
                            <span class="badge bg-danger">@ViewBag.error</span>
                        }
                    </div>
                    <div class="form-group mb-2">
                        @Html.TextBoxFor(x => x.NewPassword, new { @class = "form-control has-validation", @placeholder = "New Password", @required = "required", @type = "password", @value = "" })
                        @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "badge bg-danger" })
                        @if (ViewBag.error != null)
                        {
                            <span class="badge bg-danger">@ViewBag.error</span>
                        }
                    </div>
                    <div class="form-group mb-2">
                        @Html.TextBoxFor(x => x.ConfirmPassword, new { @class = "form-control has-validation", @placeholder = "Confirm Password", @required = "required", @type = "password", @value = "" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "badge bg-danger" })
                        @if (ViewBag.error != null)
                        {
                            <span class="badge bg-danger">@ViewBag.error</span>
                        }
                    </div>
                    <div class="form-group mt-3">
                        <button type="submit" class="btn btn-primary btn-block btn-lg w-100">Update</button>
                    </div>

                 
                        <a asp-controller="Manager" asp-action="Dashboard" p-2>Home Page</a>
                    

                    



                    <p class="text-center recovery-instruction mt-4">@ViewBag.Data</p>
                </div>
                }
            </div>
        </div>
    </div>
</div>



